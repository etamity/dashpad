{"version":3,"sources":["common/components/AppBreadcrumb/AppBreadcrumb.js","common/components/AppBreadcrumb/index.js","common/components/AppSidebarNav/AppSidebarNav.js","common/components/AppSidebarNav/index.js","common/components/ModalBox/ModalBox.js","common/containers/DefaultLayout/Aside/DefaultAside.js","common/containers/DefaultLayout/Aside/index.js","common/components/LoadingSpinner/index.js","common/containers/DefaultLayout/DefaultLayout.js","common/containers/DefaultLayout/index.js"],"names":["routes","BreadcrumbsItem","_ref","match","routeName","url","aroute","_","flatMap","route","concat","Object","toConsumableArray","find","path","name","findRouteName","isExact","react_default","a","createElement","BreadcrumbItem","active","Link","to","Breadcrumbs","args","items","pathname","paths","split","reduce","prev","curr","currPath","push","getPaths","location","map","i","Route","key","toString","component","Breadcrumb","AppBreadcrumb","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","appRoutes","_this$props","className","Tag","tag","attributes","objectWithoutProperties","children","classes","classNames","assign","Component","defaultProps","exact","AppSidebarNav","handleClick","bind","assertThisInitialized","activeRoute","hideMobile","getUIBulderRoute","e","preventDefault","currentTarget","parentElement","classList","toggle","indexOf","document","body","contains","_this2","item","index","navType","idx","title","navTitle","divider","navDivider","label","navLabel","navDropdown","navItem","class","navWrapper","wrapper","element","React","link","icon","variant","navLink","classIcon","href","onClick","navBadge","badge","navList","nav","objectSpread","packageName","goto","packageInfo","fileName","pop","_this3","itemIcon","itemBadge","uiRoute","NavItem","disabled","es_NavLink","isExternal","loadFile","NavLink","activeClassName","Badge","color","text","substring","navConfig","isOpen","staticContext","navClasses","isRtl","getComputedStyle","querySelector","direction","lib_default","option","suppressScrollX","Nav","ModalBox","_Component","apply","arguments","inherits","createClass","value","Modal","ModalHeader","ModalBody","message","ModalFooter","Button","onConfirm","ProcessManager","Remote","DefaultAside","activeTab","tab","setState","ProcessListView","processes","ListGroupItem","size","bold","AppAction","showModal","pid","kill","script","packageJson","version","Progress","animated","ProcessTaskItem","unshift","tabs","[icon-list]","ListGroup","Fragment","TabView","connect","app","LoadingSpinner","DefaultFooter","lazy","__webpack_require__","then","DefaultHeader","DefaultLayout","modalToggle","history","uiFile","uiFilePath","PathHelper","getDashSpace","join","loadUISchemaPath","force","cssClass","asideMenuCssClasses","checkBreakpoint","validBreakpoints","toggleClasses","closeModal","_this$props$config","config","TopMenus","TopRightButtons","SideMenus","modal","openAside","length","modalProps","toggleAside","react_toastify_lib","ModalBox_ModalBox","es","fixed","react","fallback","navs","rightNavs","showToggle","onConform","onLogout","signOut","display","components_AppSidebarNav","loadUIFile","components_AppBreadcrumb","AutoRouter","base","indexRoute","Aside"],"mappings":"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","file":"static/js/6.7d4f49cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nlet routes;\n\nconst getPaths = pathname => {\n    const paths = ['/'];\n\n    if (pathname === '/') return paths;\n\n    pathname.split('/').reduce((prev, curr) => {\n        const currPath = `${prev}/${curr}`;\n        paths.push(currPath);\n        return currPath;\n    });\n    return paths;\n};\n\nconst findRouteName = url => {\n    const flattenRoutes = _.flatMap(\n        routes,\n        route => (route.routes && [route, ...route.routes]) || route\n    );\n    const aroute = flattenRoutes.find(route => url === route.path);\n    return (aroute && aroute.name) || null;\n};\n\nconst BreadcrumbsItem = ({ match }) => {\n    const routeName = findRouteName(match.url);\n    if (routeName) {\n        return match.isExact ? (\n            <BreadcrumbItem active>{routeName}</BreadcrumbItem>\n        ) : (\n            <BreadcrumbItem>\n                <Link to={match.url || ''}>{routeName}</Link>\n            </BreadcrumbItem>\n        );\n    }\n    return null;\n};\n\nBreadcrumbsItem.propTypes = {\n    match: PropTypes.shape({\n        url: PropTypes.string,\n    }),\n};\n\nconst Breadcrumbs = args => {\n    const paths = getPaths(args.location.pathname);\n    const items = paths.map((path, i) => (\n        <Route key={i.toString()} path={path} component={BreadcrumbsItem} />\n    ));\n    return <Breadcrumb>{items}</Breadcrumb>;\n};\n\nconst propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    appRoutes: PropTypes.any,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n};\n\nconst defaultProps = {\n    tag: 'div',\n    className: '',\n    appRoutes: [{ path: '/', exact: true, name: 'Home', component: null }],\n};\n\nclass AppBreadcrumb extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { routes: props.appRoutes };\n        routes = this.state.routes;\n    }\n\n    render() {\n        const { className, tag: Tag, ...attributes } = this.props;\n\n        delete attributes.children;\n        delete attributes.appRoutes;\n\n        const classes = classNames(className);\n\n        return (\n            <Tag className={classes}>\n                <Route path=\"/:path\" component={Breadcrumbs} {...attributes} />\n            </Tag>\n        );\n    }\n}\n\nAppBreadcrumb.propTypes = propTypes;\nAppBreadcrumb.defaultProps = defaultProps;\n\nexport default AppBreadcrumb;\n","import AppBreadcrumb from './AppBreadcrumb';\nexport default AppBreadcrumb;\n","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Badge, Nav, NavItem, NavLink as RsNavLink } from 'reactstrap';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nconst propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    navConfig: PropTypes.any,\n    navFunc: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    isOpen: PropTypes.bool,\n    staticContext: PropTypes.any,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n};\n\nconst defaultProps = {\n    tag: 'nav',\n    navConfig: {\n        items: [\n            {\n                name: 'Dashboard',\n                url: '/dashboard',\n                icon: 'icon-speedometer',\n                badge: { variant: 'info', text: 'NEW' },\n            },\n        ],\n    },\n    isOpen: false,\n};\n\nclass AppSidebarNav extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.activeRoute = this.activeRoute.bind(this);\n        this.hideMobile = this.hideMobile.bind(this);\n        this.getUIBulderRoute = this.getUIBulderRoute.bind(this);\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        e.currentTarget.parentElement.classList.toggle('open');\n    }\n\n    activeRoute(routeName, props) {\n        return props.location.pathname.indexOf(routeName) > -1\n            ? 'nav-item nav-dropdown open'\n            : `nav-item nav-dropdown`;\n    }\n\n    hideMobile() {\n        if (document.body.classList.contains('sidebar-show')) {\n            document.body.classList.toggle('sidebar-show');\n        }\n    }\n\n    // nav list\n    navList(items) {\n        return items.map((item, index) => this.navType(item, index));\n    }\n\n    // nav type\n    navType(item, idx) {\n        return item.title\n            ? this.navTitle(item, idx)\n            : item.divider\n            ? this.navDivider(item, idx)\n            : item.label\n            ? this.navLabel(item, idx)\n            : item.children\n            ? this.navDropdown(item, idx)\n            : this.navItem(item, idx);\n    }\n\n    // nav list section title\n    navTitle(title, key) {\n        const classes = classNames('nav-title', title.class);\n        return (\n            <li key={key} className={classes}>\n                {this.navWrapper(title)}{' '}\n            </li>\n        );\n    }\n\n    // simple wrapper for nav-title item\n    navWrapper(item) {\n        return item.wrapper && item.wrapper.element\n            ? React.createElement(\n                  item.wrapper.element,\n                  item.wrapper.attributes,\n                  item.name\n              )\n            : item.name;\n    }\n\n    // nav list divider\n    navDivider(divider, key) {\n        const classes = classNames('divider', divider.class);\n        return <li key={key} className={classes} />;\n    }\n\n    // nav label with nav link\n    navLabel(item, key) {\n        const classes = {\n            item: classNames('hidden-cn', item.class),\n            link: classNames('nav-label', item.class ? item.class : ''),\n            icon: classNames(\n                'nav-icon',\n                !item.icon ? 'fa fa-circle' : item.icon,\n                item.label.variant ? `text-${item.label.variant}` : '',\n                item.label.class ? item.label.class : ''\n            ),\n        };\n        return this.navLink(item, key, classes);\n    }\n\n    // nav dropdown\n    navDropdown(item, key) {\n        const classIcon = classNames('nav-icon', item.icon);\n        return (\n            <li key={key} className={this.activeRoute(item.url, this.props)}>\n                <a\n                    className=\"nav-link nav-dropdown-toggle\"\n                    href=\"/#\"\n                    onClick={this.handleClick}\n                >\n                    <i className={classIcon} />\n                    {item.name}\n                    {this.navBadge(item.badge)}\n                </a>\n                <ul className=\"nav-dropdown-items\">\n                    {this.navList(\n                        item.children.map(nav => ({\n                            packageName: item.packageName,\n                            ...nav,\n                        }))\n                    )}\n                </ul>\n            </li>\n        );\n    }\n\n    // nav item with nav link\n    navItem(item, key) {\n        let active = false;\n        if (\n            this.props.location.pathname.indexOf(\n                this.getUIBulderRoute(item.goto)\n            ) > -1\n        ) {\n            const { packageInfo } = this.props;\n            if (\n                packageInfo &&\n                packageInfo.packageName === item.packageName &&\n                packageInfo.fileName === item.goto\n            ) {\n                active = true;\n            }\n        }\n        const classes = {\n            item: classNames(item.class),\n            link: classNames(\n                'nav-link',\n                item.variant ? `nav-link-${item.variant}` : '',\n                'cursor-pointer',\n                active ? 'active' : ''\n            ),\n            icon: classNames('nav-icon', item.icon),\n        };\n        return this.navLink(item, key, classes);\n    }\n\n    getUIBulderRoute(fileName) {\n        const ext = fileName && fileName.split('.').pop();\n        switch (ext) {\n            case 'mdx':\n            case 'jsx':\n                return '/mdxbuilder';\n            case 'yaml':\n            case 'yml':\n                return '/schemabuilder';\n            default:\n                return '/';\n        }\n    }\n    // nav link\n    navLink(item, key, classes) {\n        const url = item.url || '';\n        const itemIcon = <i className={classes.icon} />;\n        const itemBadge = this.navBadge(item.badge);\n        const attributes = item.attributes || {};\n        const uiRoute = item.goto && this.getUIBulderRoute(item.goto);\n        return (\n            <NavItem key={key} className={classes.item}>\n                {attributes.disabled ? (\n                    <RsNavLink\n                        href={''}\n                        className={classes.link}\n                        {...attributes}\n                    >\n                        {itemIcon}\n                        {item.name}\n                        {itemBadge}\n                    </RsNavLink>\n                ) : this.isExternal(url) ? (\n                    <RsNavLink\n                        href={url}\n                        className={classes.link}\n                        active\n                        {...attributes}\n                    >\n                        {itemIcon}\n                        {item.name}\n                        {itemBadge}\n                    </RsNavLink>\n                ) : item.goto ? (\n                    <Link\n                        to={uiRoute}\n                        className={classes.link}\n                        onClick={() => {\n                            this.props.loadFile &&\n                                this.props.loadFile(\n                                    item.packageName,\n                                    item.goto\n                                );\n                        }}\n                        {...attributes}\n                    >\n                        {itemIcon}\n                        {item.name}\n                        {itemBadge}\n                    </Link>\n                ) : (\n                    <NavLink\n                        to={url}\n                        className={classes.link}\n                        activeClassName=\"active\"\n                        onClick={this.hideMobile}\n                        {...attributes}\n                    >\n                        {itemIcon}\n                        {item.name}\n                        {itemBadge}\n                    </NavLink>\n                )}\n            </NavItem>\n        );\n    }\n\n    // badge addon to NavItem\n    navBadge(badge) {\n        if (badge) {\n            const classes = classNames(badge.class);\n            return (\n                <Badge className={classes} color={badge.variant}>\n                    {badge.text}\n                </Badge>\n            );\n        }\n        return null;\n    }\n\n    isExternal(url) {\n        const link = url ? url.substring(0, 4) : '';\n        return link === 'http';\n    }\n\n    render() {\n        const { className, children, navConfig, ...attributes } = this.props;\n\n        delete attributes.isOpen;\n        delete attributes.staticContext;\n        delete attributes.Tag;\n\n        const navClasses = classNames(className, 'sidebar-nav');\n\n        // ToDo: find better rtl fix\n        const isRtl =\n            getComputedStyle(document.querySelector('html')).direction ===\n            'rtl';\n\n        // sidebar-nav root\n        return (\n            <PerfectScrollbar\n                className={navClasses}\n                {...attributes}\n                option={{ suppressScrollX: !isRtl }}\n            >\n                <Nav>{children || this.navList(navConfig.items)}</Nav>\n            </PerfectScrollbar>\n        );\n    }\n}\n\nAppSidebarNav.propTypes = propTypes;\nAppSidebarNav.defaultProps = defaultProps;\n\nexport default AppSidebarNav;\n","import AppSidebarNav from './AppSidebarNav';\nexport default AppSidebarNav;\n","import React, { Component } from 'react';\n\nimport { Modal, ModalHeader, ModalBody, Button, ModalFooter } from 'reactstrap';\n\nexport class ModalBox extends Component {\n    render() {\n        const props = this.props;\n        return (\n            <Modal\n                isOpen={props.isOpen}\n                toggle={props.toggle}\n                className={`modal-${props.variant} ` + this.props.className}\n            >\n                <ModalHeader toggle={props.toggle}> {props.title}</ModalHeader>\n                <ModalBody>{props.message}</ModalBody>\n                <ModalFooter>\n                    <Button\n                        color={props.variant}\n                        onClick={() => {\n                            props.toggle && props.toggle();\n                            props.onConfirm && props.onConfirm();\n                        }}\n                    >\n                        Confirm\n                    </Button>{' '}\n                    <Button color=\"secondary\" onClick={props.toggle}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Button, ListGroup, ListGroupItem, Progress } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport TabView from 'common/components/TabView';\nimport { Remote } from 'common/libs/Remote';\nimport { AppAction } from 'common/reducers/app';\nconst propTypes = {\n    children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nconst { ProcessManager } = Remote();\n\nclass DefaultAside extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: props.activeTab,\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    render() {\n        // eslint-disable-next-line\n        const { children, ...attributes } = this.props;\n        const messageBold = bold => (\n            <h6>\n                Are you sure to kill process pid <b>{bold}</b> ?\n            </h6>\n        );\n        const ProcessTaskItem = (item, index) => (\n            <ListGroupItem\n                key={index}\n                className=\"list-group-item-accent-warning list-group-item-divider\"\n            >\n                <div className=\"float-right\">\n                    <Button\n                        size=\"sm\"\n                        color=\"danger\"\n                        onClick={() => {\n                            AppAction.showModal({\n                                title: 'Kill Process',\n                                message: messageBold(item.pid),\n                                variant: 'danger',\n                                onConfirm: () => {\n                                    ProcessManager.kill(item.pid);\n                                },\n                            });\n                        }}\n                    >\n                        {' '}\n                        <i className=\"icon-close\" />\n                    </Button>\n                </div>\n                <div>\n                    <strong>{item.packageName}</strong>{' '}\n                </div>\n                <small className=\"text-muted mr-3\">\n                    <i className=\"icon-calendar\" />{' '}\n                    <strong>{item.script}</strong>\n                </small>\n                <small className=\"text-muted\">\n                    <i className=\"icon-location-pin\" /> V{' '}\n                    {item.packageJson.version}\n                </small>\n                <Progress\n                    animated\n                    color=\"success\"\n                    value=\"100\"\n                    className=\"mt-3\"\n                />\n            </ListGroupItem>\n        );\n\n        const ProcessListView = this.props.processes.map((item, index) => {\n            return ProcessTaskItem(item, index);\n        });\n        ProcessListView.unshift(\n            <ListGroupItem\n                key={'title-index-0'}\n                className=\"list-group-item-accent-secondary bg-light text-center font-weight-bold text-muted text-uppercase small\"\n            >\n                All Running Tasks\n            </ListGroupItem>\n        );\n\n        const ProcessListGoup = (\n            <ListGroup className=\"list-group-accent\" tag={'div'}>\n                {' '}\n                {ProcessListView}{' '}\n            </ListGroup>\n        );\n        const tabs = {\n            '[icon-list]': ProcessListGoup,\n        };\n        return (\n            <React.Fragment>\n                <TabView tabs={tabs} />\n            </React.Fragment>\n        );\n    }\n}\n\nDefaultAside.propTypes = propTypes;\nDefaultAside.defaultProps = defaultProps;\n\nexport default DefaultAside;\n","import DefaultAside from './DefaultAside';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        processes: state.app.processes,\n    };\n};\n\nexport default connect(mapStateToProps)(DefaultAside);\n","import React from 'react';\nexport default () => (\n    <div className=\"sk-cube-grid\">\n    <div className=\"sk-cube sk-cube1\"></div>\n    <div className=\"sk-cube sk-cube2\"></div>\n    <div className=\"sk-cube sk-cube3\"></div>\n    <div className=\"sk-cube sk-cube4\"></div>\n    <div className=\"sk-cube sk-cube5\"></div>\n    <div className=\"sk-cube sk-cube6\"></div>\n    <div className=\"sk-cube sk-cube7\"></div>\n    <div className=\"sk-cube sk-cube8\"></div>\n    <div className=\"sk-cube sk-cube9\"></div>\n  </div>\n);\n","import React, { Component, Suspense } from 'react';\nimport AutoRouter from 'common/libs/AutoRouter.js';\nimport {\n    AppAside,\n    AppFooter,\n    AppHeader,\n    AppSidebar,\n    AppSidebarFooter,\n    AppSidebarForm,\n    AppSidebarHeader,\n    AppSidebarMinimizer,\n} from '@coreui/react';\nimport { AppAction } from 'common/reducers/app';\nimport AppBreadcrumb from 'common/components/AppBreadcrumb';\nimport AppSidebarNav from 'common/components/AppSidebarNav';\nimport { Remote } from 'common/libs/Remote';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport toggleClasses from '@coreui/react/lib/Shared/toggle-classes';\nimport {\n    asideMenuCssClasses,\n    validBreakpoints,\n    checkBreakpoint,\n} from '@coreui/react/lib/Shared/index';\n\nimport { ModalBox } from 'common/components/ModalBox';\nimport Aside from './Aside';\nimport LoadingSpinner from 'common/components/LoadingSpinner';\n\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nexport class DefaultLayout extends Component {\n    constructor() {\n        super();\n        this.modalToggle = this.modalToggle.bind(this);\n    }\n\n    signOut(e) {\n        e.preventDefault();\n        this.props.history.push('/login');\n    }\n    loadUIFile(packageName, uiFile) {\n        const { PathHelper } = Remote();\n        const uiFilePath = [PathHelper.getDashSpace(packageName), uiFile].join(\n            '/'\n        );\n        AppAction.loadUISchemaPath(uiFilePath);\n    }\n\n    toggleAside(force) {\n        const [display, mobile] = ['lg', false];\n        let cssClass = asideMenuCssClasses[0];\n        if (!mobile && display && checkBreakpoint(display, validBreakpoints)) {\n            cssClass = `aside-menu-${display}-show`;\n        }\n        toggleClasses(cssClass, asideMenuCssClasses, force);\n    }\n    modalToggle() {\n        AppAction.closeModal();\n    }\n    render() {\n        const { TopMenus, TopRightButtons, SideMenus } = this.props.config;\n        const { routes, modal } = this.props;\n        const openAside =\n            !!this.props.processes && this.props.processes.length > 0;\n        const modalProps = modal.length > 0 && modal[modal.length - 1];\n        this.toggleAside(openAside);\n        return (\n            <div className=\"app\">\n                <ToastContainer />\n                <ModalBox\n                    isOpen={modal.length > 0}\n                    {...modalProps}\n                    toggle={this.modalToggle}\n                />\n                <AppHeader fixed>\n                    <Suspense fallback={<LoadingSpinner />}>\n                        <DefaultHeader\n                            navs={TopMenus}\n                            rightNavs={TopRightButtons}\n                            showToggle={!!this.props.processes}\n                            onConform={modalProps && modalProps.onConform}\n                            onLogout={e => this.signOut(e)}\n                            {...this.props}\n                        />\n                    </Suspense>\n                </AppHeader>\n                <div className=\"app-body\">\n                    <AppSidebar fixed display=\"lg\">\n                        <AppSidebarHeader />\n                        <AppSidebarForm />\n                        <Suspense>\n                            <AppSidebarNav\n                                navConfig={SideMenus}\n                                loadFile={this.loadUIFile}\n                                {...this.props}\n                            />\n                        </Suspense>\n                        <AppSidebarFooter />\n                        <AppSidebarMinimizer />\n                    </AppSidebar>\n                    <main className=\"main\">\n                        <AppBreadcrumb appRoutes={routes} />\n                        <Suspense fallback={<LoadingSpinner />}>\n                            <AutoRouter\n                                routes={this.props.routes}\n                                {...this.props}\n                                base={'/'}\n                                indexRoute={'/docs/0.documents/0.index.mdx'}\n                            />\n                        </Suspense>\n                    </main>\n\n                    {!!this.props.processes && (\n                        <AppAside fixed>\n                            <Aside />\n                        </AppAside>\n                    )}\n                </div>\n                <AppFooter>\n                    <Suspense fallback={<LoadingSpinner />}>\n                        <DefaultFooter />\n                    </Suspense>\n                </AppFooter>\n            </div>\n        );\n    }\n}\n","import { DefaultLayout } from './DefaultLayout';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        ...state.app,\n    };\n};\n\nexport default connect(mapStateToProps)(DefaultLayout);\n"],"sourceRoot":""}